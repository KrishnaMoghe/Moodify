import { Router } from "express";
const router = Router();
import * as moodMappings from "../utils/moodMappings.js";
import { getUserTopArtists, searchArtists, getRecommendations, getUserProfile, createPlaylist, addTracksToPlaylist } from "../spotify/spotifyApi.js";

// 1. Get user's top artists (for artist picker)
router.get("/top-artists", async (req, res) => {
  const accessToken = req.cookies.access_token;
  if (!accessToken) return res.sendStatus(401);
  try {
    const artists = await getUserTopArtists(accessToken, 15);
    res.json(artists);
  } catch (err) {
    res.sendStatus(500);
  }
});

// 2. Search artist by name (for multi-select)
router.get("/search-artists", async (req, res) => {
  const accessToken = req.cookies.access_token;
  const { query } = req.query;
  if (!accessToken) return res.sendStatus(401);
  try {
    const artists = await searchArtists(accessToken, query);
    res.json(artists);
  } catch (err) {
    res.sendStatus(500);
  }
});

// 3. Generate playlist
router.post("/generate", async (req, res) => {
  const accessToken = req.cookies.access_token;
  if (!accessToken) return res.sendStatus(401);
  const { mood, artistIds } = req.body;
  if (!mood || !artistIds || !Array.isArray(artistIds)) return res.status(400).send("Incomplete data");

  try {
    const moodParams = moodMappings[mood] || moodMappings["Happy"];
    // Find recommendations
    const tracks = await getRecommendations(accessToken, artistIds, moodParams, 20);
    if (!tracks || tracks.length === 0) return res.status(404).send("No tracks found");

    // Get user info
    const user = await getUserProfile(accessToken);

    // Create playlist
    const playlist = await createPlaylist(
      accessToken,
      user.id,
      `Moodify - ${mood} vibes`,
      "Custom playlist generated by Moodify"
    );

    // Add tracks to playlist
    const uris = tracks.map(track => track.uri);
    await addTracksToPlaylist(accessToken, playlist.id, uris);

    // Return playlist link
    res.json({ playlistUrl: playlist.external_urls.spotify });
  } catch (err) {
    console.error(err);
    res.sendStatus(500);
  }
});

export default router;
